//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("NeptonDBModel", "FK_NT_ARTIC_REFERENCE_NT_ARTIC", "NT_ArticleType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Nepton.Models.NT_ArticleType), "NT_Article", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nepton.Models.NT_Article))]
[assembly: EdmRelationshipAttribute("NeptonDBModel", "FK_NT_PRODU_REFERENCE_NT_ARTIC", "NT_Article", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Nepton.Models.NT_Article), "NT_ProductPic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Nepton.Models.NT_ProductPic), true)]

#endregion

namespace Nepton.Models
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class Entities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“Entities”部分中的连接字符串初始化新 Entities 对象。
        /// </summary>
        public Entities() : base("name=Entities", "Entities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 Entities 对象。
        /// </summary>
        public Entities(string connectionString) : base(connectionString, "Entities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 Entities 对象。
        /// </summary>
        public Entities(EntityConnection connection) : base(connection, "Entities")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<NT_Article> NT_Article
        {
            get
            {
                if ((_NT_Article == null))
                {
                    _NT_Article = base.CreateObjectSet<NT_Article>("NT_Article");
                }
                return _NT_Article;
            }
        }
        private ObjectSet<NT_Article> _NT_Article;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<NT_ArticleType> NT_ArticleType
        {
            get
            {
                if ((_NT_ArticleType == null))
                {
                    _NT_ArticleType = base.CreateObjectSet<NT_ArticleType>("NT_ArticleType");
                }
                return _NT_ArticleType;
            }
        }
        private ObjectSet<NT_ArticleType> _NT_ArticleType;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<NT_Config> NT_Config
        {
            get
            {
                if ((_NT_Config == null))
                {
                    _NT_Config = base.CreateObjectSet<NT_Config>("NT_Config");
                }
                return _NT_Config;
            }
        }
        private ObjectSet<NT_Config> _NT_Config;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<NT_Contact> NT_Contact
        {
            get
            {
                if ((_NT_Contact == null))
                {
                    _NT_Contact = base.CreateObjectSet<NT_Contact>("NT_Contact");
                }
                return _NT_Contact;
            }
        }
        private ObjectSet<NT_Contact> _NT_Contact;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<NT_ProductPic> NT_ProductPic
        {
            get
            {
                if ((_NT_ProductPic == null))
                {
                    _NT_ProductPic = base.CreateObjectSet<NT_ProductPic>("NT_ProductPic");
                }
                return _NT_ProductPic;
            }
        }
        private ObjectSet<NT_ProductPic> _NT_ProductPic;

        #endregion
        #region AddTo 方法
    
        /// <summary>
        /// 用于向 NT_Article EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToNT_Article(NT_Article nT_Article)
        {
            base.AddObject("NT_Article", nT_Article);
        }
    
        /// <summary>
        /// 用于向 NT_ArticleType EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToNT_ArticleType(NT_ArticleType nT_ArticleType)
        {
            base.AddObject("NT_ArticleType", nT_ArticleType);
        }
    
        /// <summary>
        /// 用于向 NT_Config EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToNT_Config(NT_Config nT_Config)
        {
            base.AddObject("NT_Config", nT_Config);
        }
    
        /// <summary>
        /// 用于向 NT_Contact EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToNT_Contact(NT_Contact nT_Contact)
        {
            base.AddObject("NT_Contact", nT_Contact);
        }
    
        /// <summary>
        /// 用于向 NT_ProductPic EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToNT_ProductPic(NT_ProductPic nT_ProductPic)
        {
            base.AddObject("NT_ProductPic", nT_ProductPic);
        }

        #endregion
    }
    

    #endregion
    
    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NeptonDBModel", Name="NT_Article")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NT_Article : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 NT_Article 对象。
        /// </summary>
        /// <param name="articleID">ArticleID 属性的初始值。</param>
        public static NT_Article CreateNT_Article(global::System.Guid articleID)
        {
            NT_Article nT_Article = new NT_Article();
            nT_Article.ArticleID = articleID;
            return nT_Article;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ArticleID
        {
            get
            {
                return _ArticleID;
            }
            set
            {
                if (_ArticleID != value)
                {
                    OnArticleIDChanging(value);
                    ReportPropertyChanging("ArticleID");
                    _ArticleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ArticleID");
                    OnArticleIDChanged();
                }
            }
        }
        private global::System.Guid _ArticleID;
        partial void OnArticleIDChanging(global::System.Guid value);
        partial void OnArticleIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                OnCreatorChanging(value);
                ReportPropertyChanging("Creator");
                _Creator = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Creator");
                OnCreatorChanged();
            }
        }
        private global::System.String _Creator;
        partial void OnCreatorChanging(global::System.String value);
        partial void OnCreatorChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateTime
        {
            get
            {
                return _CreateTime;
            }
            set
            {
                OnCreateTimeChanging(value);
                ReportPropertyChanging("CreateTime");
                _CreateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateTime");
                OnCreateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateTime;
        partial void OnCreateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private global::System.String _Content;
        partial void OnContentChanging(global::System.String value);
        partial void OnContentChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _Status;
        partial void OnStatusChanging(Nullable<global::System.Int32> value);
        partial void OnStatusChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NeptonDBModel", "FK_NT_ARTIC_REFERENCE_NT_ARTIC", "NT_ArticleType")]
        public NT_ArticleType NT_ArticleType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NT_ArticleType>("NeptonDBModel.FK_NT_ARTIC_REFERENCE_NT_ARTIC", "NT_ArticleType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NT_ArticleType>("NeptonDBModel.FK_NT_ARTIC_REFERENCE_NT_ARTIC", "NT_ArticleType").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NT_ArticleType> NT_ArticleTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NT_ArticleType>("NeptonDBModel.FK_NT_ARTIC_REFERENCE_NT_ARTIC", "NT_ArticleType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NT_ArticleType>("NeptonDBModel.FK_NT_ARTIC_REFERENCE_NT_ARTIC", "NT_ArticleType", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NeptonDBModel", "FK_NT_PRODU_REFERENCE_NT_ARTIC", "NT_ProductPic")]
        public EntityCollection<NT_ProductPic> NT_ProductPic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NT_ProductPic>("NeptonDBModel.FK_NT_PRODU_REFERENCE_NT_ARTIC", "NT_ProductPic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NT_ProductPic>("NeptonDBModel.FK_NT_PRODU_REFERENCE_NT_ARTIC", "NT_ProductPic", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NeptonDBModel", Name="NT_ArticleType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NT_ArticleType : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 NT_ArticleType 对象。
        /// </summary>
        /// <param name="typeID">TypeID 属性的初始值。</param>
        public static NT_ArticleType CreateNT_ArticleType(global::System.Guid typeID)
        {
            NT_ArticleType nT_ArticleType = new NT_ArticleType();
            nT_ArticleType.TypeID = typeID;
            return nT_ArticleType;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TypeID
        {
            get
            {
                return _TypeID;
            }
            set
            {
                if (_TypeID != value)
                {
                    OnTypeIDChanging(value);
                    ReportPropertyChanging("TypeID");
                    _TypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TypeID");
                    OnTypeIDChanged();
                }
            }
        }
        private global::System.Guid _TypeID;
        partial void OnTypeIDChanging(global::System.Guid value);
        partial void OnTypeIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TypeName
        {
            get
            {
                return _TypeName;
            }
            set
            {
                OnTypeNameChanging(value);
                ReportPropertyChanging("TypeName");
                _TypeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TypeName");
                OnTypeNameChanged();
            }
        }
        private global::System.String _TypeName;
        partial void OnTypeNameChanging(global::System.String value);
        partial void OnTypeNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ParentID
        {
            get
            {
                return _ParentID;
            }
            set
            {
                OnParentIDChanging(value);
                ReportPropertyChanging("ParentID");
                _ParentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentID");
                OnParentIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ParentID;
        partial void OnParentIDChanging(Nullable<global::System.Guid> value);
        partial void OnParentIDChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NeptonDBModel", "FK_NT_ARTIC_REFERENCE_NT_ARTIC", "NT_Article")]
        public EntityCollection<NT_Article> NT_Article
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NT_Article>("NeptonDBModel.FK_NT_ARTIC_REFERENCE_NT_ARTIC", "NT_Article");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NT_Article>("NeptonDBModel.FK_NT_ARTIC_REFERENCE_NT_ARTIC", "NT_Article", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NeptonDBModel", Name="NT_Config")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NT_Config : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 NT_Config 对象。
        /// </summary>
        /// <param name="configID">ConfigID 属性的初始值。</param>
        public static NT_Config CreateNT_Config(global::System.Guid configID)
        {
            NT_Config nT_Config = new NT_Config();
            nT_Config.ConfigID = configID;
            return nT_Config;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ConfigID
        {
            get
            {
                return _ConfigID;
            }
            set
            {
                if (_ConfigID != value)
                {
                    OnConfigIDChanging(value);
                    ReportPropertyChanging("ConfigID");
                    _ConfigID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ConfigID");
                    OnConfigIDChanged();
                }
            }
        }
        private global::System.Guid _ConfigID;
        partial void OnConfigIDChanging(global::System.Guid value);
        partial void OnConfigIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Key
        {
            get
            {
                return _Key;
            }
            set
            {
                OnKeyChanging(value);
                ReportPropertyChanging("Key");
                _Key = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Key");
                OnKeyChanged();
            }
        }
        private global::System.String _Key;
        partial void OnKeyChanging(global::System.String value);
        partial void OnKeyChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value1
        {
            get
            {
                return _Value1;
            }
            set
            {
                OnValue1Changing(value);
                ReportPropertyChanging("Value1");
                _Value1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Value1");
                OnValue1Changed();
            }
        }
        private global::System.String _Value1;
        partial void OnValue1Changing(global::System.String value);
        partial void OnValue1Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value2
        {
            get
            {
                return _Value2;
            }
            set
            {
                OnValue2Changing(value);
                ReportPropertyChanging("Value2");
                _Value2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Value2");
                OnValue2Changed();
            }
        }
        private global::System.String _Value2;
        partial void OnValue2Changing(global::System.String value);
        partial void OnValue2Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value3
        {
            get
            {
                return _Value3;
            }
            set
            {
                OnValue3Changing(value);
                ReportPropertyChanging("Value3");
                _Value3 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Value3");
                OnValue3Changed();
            }
        }
        private global::System.String _Value3;
        partial void OnValue3Changing(global::System.String value);
        partial void OnValue3Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value4
        {
            get
            {
                return _Value4;
            }
            set
            {
                OnValue4Changing(value);
                ReportPropertyChanging("Value4");
                _Value4 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Value4");
                OnValue4Changed();
            }
        }
        private global::System.String _Value4;
        partial void OnValue4Changing(global::System.String value);
        partial void OnValue4Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NeptonDBModel", Name="NT_Contact")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NT_Contact : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 NT_Contact 对象。
        /// </summary>
        /// <param name="contactID">ContactID 属性的初始值。</param>
        public static NT_Contact CreateNT_Contact(global::System.Guid contactID)
        {
            NT_Contact nT_Contact = new NT_Contact();
            nT_Contact.ContactID = contactID;
            return nT_Contact;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ContactID
        {
            get
            {
                return _ContactID;
            }
            set
            {
                if (_ContactID != value)
                {
                    OnContactIDChanging(value);
                    ReportPropertyChanging("ContactID");
                    _ContactID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContactID");
                    OnContactIDChanged();
                }
            }
        }
        private global::System.Guid _ContactID;
        partial void OnContactIDChanging(global::System.Guid value);
        partial void OnContactIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Company
        {
            get
            {
                return _Company;
            }
            set
            {
                OnCompanyChanging(value);
                ReportPropertyChanging("Company");
                _Company = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Company");
                OnCompanyChanged();
            }
        }
        private global::System.String _Company;
        partial void OnCompanyChanging(global::System.String value);
        partial void OnCompanyChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Tel
        {
            get
            {
                return _Tel;
            }
            set
            {
                OnTelChanging(value);
                ReportPropertyChanging("Tel");
                _Tel = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Tel");
                OnTelChanged();
            }
        }
        private global::System.String _Tel;
        partial void OnTelChanging(global::System.String value);
        partial void OnTelChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Msg
        {
            get
            {
                return _Msg;
            }
            set
            {
                OnMsgChanging(value);
                ReportPropertyChanging("Msg");
                _Msg = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Msg");
                OnMsgChanged();
            }
        }
        private global::System.String _Msg;
        partial void OnMsgChanging(global::System.String value);
        partial void OnMsgChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateTime
        {
            get
            {
                return _CreateTime;
            }
            set
            {
                OnCreateTimeChanging(value);
                ReportPropertyChanging("CreateTime");
                _CreateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateTime");
                OnCreateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateTime;
        partial void OnCreateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NeptonDBModel", Name="NT_ProductPic")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NT_ProductPic : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 NT_ProductPic 对象。
        /// </summary>
        /// <param name="picID">PicID 属性的初始值。</param>
        public static NT_ProductPic CreateNT_ProductPic(global::System.Guid picID)
        {
            NT_ProductPic nT_ProductPic = new NT_ProductPic();
            nT_ProductPic.PicID = picID;
            return nT_ProductPic;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PicID
        {
            get
            {
                return _PicID;
            }
            set
            {
                if (_PicID != value)
                {
                    OnPicIDChanging(value);
                    ReportPropertyChanging("PicID");
                    _PicID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PicID");
                    OnPicIDChanged();
                }
            }
        }
        private global::System.Guid _PicID;
        partial void OnPicIDChanging(global::System.Guid value);
        partial void OnPicIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ArticleID
        {
            get
            {
                return _ArticleID;
            }
            set
            {
                OnArticleIDChanging(value);
                ReportPropertyChanging("ArticleID");
                _ArticleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ArticleID");
                OnArticleIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ArticleID;
        partial void OnArticleIDChanging(Nullable<global::System.Guid> value);
        partial void OnArticleIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Memo
        {
            get
            {
                return _Memo;
            }
            set
            {
                OnMemoChanging(value);
                ReportPropertyChanging("Memo");
                _Memo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Memo");
                OnMemoChanged();
            }
        }
        private global::System.String _Memo;
        partial void OnMemoChanging(global::System.String value);
        partial void OnMemoChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NeptonDBModel", "FK_NT_PRODU_REFERENCE_NT_ARTIC", "NT_Article")]
        public NT_Article NT_Article
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NT_Article>("NeptonDBModel.FK_NT_PRODU_REFERENCE_NT_ARTIC", "NT_Article").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NT_Article>("NeptonDBModel.FK_NT_PRODU_REFERENCE_NT_ARTIC", "NT_Article").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NT_Article> NT_ArticleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NT_Article>("NeptonDBModel.FK_NT_PRODU_REFERENCE_NT_ARTIC", "NT_Article");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NT_Article>("NeptonDBModel.FK_NT_PRODU_REFERENCE_NT_ARTIC", "NT_Article", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
